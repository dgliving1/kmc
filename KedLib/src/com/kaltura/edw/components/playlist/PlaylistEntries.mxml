<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:et="com.kaltura.edw.view.et.*"
		 creationComplete="onCreationComplete()" verticalGap="0" xmlns:et1="com.kaltura.edw.components.et.*">
	<mx:Script>
		<![CDATA[
			import com.kaltura.edw.components.et.EntryTableColumns;
			import com.kaltura.edw.components.et.events.EntryTableEvent;
			import com.kaltura.edw.components.playlist.events.ManualPlaylistWindowEvent;
			import com.kaltura.edw.events.KedDataEvent;
			import com.kaltura.types.KalturaPlayableEntryOrderBy;
			import com.kaltura.utils.KTimeUtil;
			import com.kaltura.vo.KalturaBaseEntry;
			import com.kaltura.vo.KalturaMediaEntry;
			
			import mx.collections.ArrayCollection;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.CollectionEvent;
			
			public static const MAX_ENTRIES_IN_PL:int = 200;
			
			[Bindable]
			public var limit:uint = 20;
			
			[Bindable]
			private var _dataProvider:ArrayCollection;
			
			[Bindable]
			public var showLinks:Boolean = true;
			[Bindable]
			public var allowSort:Boolean = false;
			[Bindable]
			public var tableTitle:String;


			public static const MOVE_ITEM_UP:String = "moveItemUp";
			public static const MOVE_ITEM_DOWN:String = "moveItemDown";
			public static const UPDATED_DATA:String = "updatedData";

			[ArrayElementType("String")]
			public static const ORDER_BY_ARR:Array = [KalturaPlayableEntryOrderBy.PLAYS_DESC,
				"recent" /* KalturaPlayableEntryOrderBy.CREATED_AT_DESC */,
				KalturaPlayableEntryOrderBy.RANK_DESC];


			[Bindable]
			public function get dataProvider():ArrayCollection {
				return _dataProvider;
			}


			public function set dataProvider(dataProvider:ArrayCollection):void {
				if (_dataProvider)
					_dataProvider.removeEventListener(CollectionEvent.COLLECTION_CHANGE, onDpChange);

				_dataProvider = dataProvider;
				_dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, onDpChange);
				onDpChange();
			}


			private function onCreationComplete():void {
				_dataProvider.addEventListener(CollectionEvent.COLLECTION_CHANGE, onDpChange);
				if (!tableTitle)
					tableTitle = resourceManager.getString('cms', 'playlistResultLabel');
			}


			private function onDpChange(evt:CollectionEvent = null):void {
				if (dataProvider) {
					var sum:Number = 0;
					for (var i:uint; i < dataProvider.length; i++) {
						KalturaMediaEntry
						if (dataProvider[i].hasOwnProperty("duration"))
							sum += dataProvider[i]["duration"];
					}
					playlistDuration.text = KTimeUtil.formatTime(sum);
				}
			}


			public function getSelectedOrderBy():String {
				var index:int = ruleBasedPlaylistOrderBy.selectedIndex;
				if (index > -1 ) {
					return ORDER_BY_ARR[index].toString();
				}
				return null;
			}


			public function setSelectedOrderBy(orderBy:String):void {
				if (orderBy == KalturaPlayableEntryOrderBy.CREATED_AT_DESC) {
					// somewhere during Caasiopeia we broke backwards compat., this is a fix.
					orderBy = "recent";
				}
				for (var i:uint = 0; i < ORDER_BY_ARR.length; i++) {
					if (ORDER_BY_ARR[i] == orderBy)
						ruleBasedPlaylistOrderBy.selectedIndex = i;
				}
			}
			
			public function getPlaylistLimit():int {
				return maxEntriesInPlaylist.value;
			}


			private function onEntryTableCreatedComplete():void {
				var ar:Array = [EntryTableColumns.NAME, EntryTableColumns.MEDIA_TYPE, 
					EntryTableColumns.PLAYS, EntryTableColumns.DURATION];
				playlistEntriesList.showColumns(ar);
				
				playlistEntriesList.allowMultipleSelection = false;

				for each (var col:DataGridColumn in playlistEntriesList.columns) {
					col.width = 40;
				}

			}


			/**
			 * notify that the numeric stepper or order by wer changed
			 */
			private function changedData():void {
				dispatchEvent(new Event(UPDATED_DATA));
			}
			private var numericStepperTimer:Timer;


			/**
			 * send notification about changes with deley so every click will not make a new search
			 */
			private function onNumericChange():void {
				if (numericStepperTimer)
					numericStepperTimer.stop();
				numericStepperTimer = null;
				numericStepperTimer = new Timer(700, 1);
				numericStepperTimer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimer);
				numericStepperTimer.start();
			}


			private function onTimer(evt:TimerEvent):void {
				numericStepperTimer.removeEventListener(TimerEvent.TIMER_COMPLETE, onTimer);
				numericStepperTimer.stop();
				numericStepperTimer = null;
				changedData();
			}


			public function get editable():Boolean {
				return upBtn.enabled;
			}


			public function set editable(value:Boolean):void {
				upBtn.enabled = value;
				upBtn.buttonMode = value;
				downBtn.enabled = value;
				downBtn.buttonMode = value;
				ruleBasedPlaylistOrderBy.enabled = value;
				maxEntriesInPlaylist.enabled = value;
				showLinks = value;
			}


			protected function playlistEntriesList_showDetailsHandler(event:EntryTableEvent):void {
				var e:KedDataEvent = new KedDataEvent(ManualPlaylistWindowEvent.SHOW_ENTRY_DETAILS);
				e.data = event.data as KalturaBaseEntry;
				dispatchEvent(e);
			}
		]]>
	</mx:Script>
	<mx:Metadata>
	[Event(name="showEntryDetails", type="com.kaltura.edw.events.KedDataEvent")] 
	[Event(name="moveItemUp", type="flash.events.Event")] 
	[Event(name="moveItemDown", type="flash.events.Event")] 
	[Event(name="updatedData", type="flash.events.Event")] 
</mx:Metadata>
	<mx:Label text="{tableTitle}" width="100%" styleName="formLabel"/>
	<mx:HBox id="controlBar" width="100%" styleName="DataGridActions" visible="false" includeInLayout="false">
	</mx:HBox>
	<et1:EntryTable id="playlistEntriesList" width="100%" height="100%" kalturaSorting="false"
				   sortableColumns="{allowSort}" showLinks="{showLinks}" dataProvider="{dataProvider}"
				   creationComplete="onEntryTableCreatedComplete()" dragEnabled="false" dropEnabled="false"
				   dragMoveEnabled="false" showDetails="playlistEntriesList_showDetailsHandler(event)"/>
	<mx:HBox id="playlistSummery" width="100%" styleName="DataGridActions" height="40">
		<mx:HBox width="100%" horizontalAlign="center">
			<mx:HBox horizontalGap="1">
				<mx:Label text="{resourceManager.getString('cms', 'entries') + ':'}"/>
				<mx:Label id="entriesAmount" text="{dataProvider.length}"/>
			</mx:HBox>
			<mx:HBox horizontalGap="1">
				<mx:Label text="{resourceManager.getString('cms', 'duration') + ':'}"/>
				<mx:Label id="playlistDuration" text='00:00'/>
			</mx:HBox>
		</mx:HBox>
		<mx:VBox id="upDownContainer" styleName="upDownButtonsBox">
			<mx:Button id="upBtn" buttonMode="true" styleName="movUpBtn"
					   click="{dispatchEvent(new Event(MOVE_ITEM_UP))}"/>
			<mx:Button id="downBtn" buttonMode="true" styleName="movDownBtn"
					   click="{dispatchEvent(new Event(MOVE_ITEM_DOWN))}"/>
		</mx:VBox>
	</mx:HBox>
	<mx:HBox id="ruleBaseBar" width="100%" styleName="DataGridActions">
		<mx:Label text="{resourceManager.getString('cms', 'orderBy')}"/>
		<mx:ComboBox id="ruleBasedPlaylistOrderBy" width="150" change="{changedData()}">
			<mx:dataProvider>
				{[
					resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_MostPlayer'), 
					resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_MostRecent'), 
					resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_HighstRated') 
					//resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_MostViewed24H') , 
					//resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_MostViewed7Days'),
					//resourceManager.getString('cms', 'ruleBasedPlaylistOrderBy_MostViewed30Days')
				]}
			</mx:dataProvider>
		</mx:ComboBox>
		<mx:Label text="{resourceManager.getString('cms', 'maxDynPlst')}"/>
		<mx:NumericStepper id="maxEntriesInPlaylist" minimum="1" maximum="{MAX_ENTRIES_IN_PL}" width="52" value="{limit}"
						   change="{onNumericChange()}"/>
	</mx:HBox>
</mx:VBox>
