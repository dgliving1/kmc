<?xml version="1.0" encoding="utf-8"?>
<HelpTitleWindow xmlns="com.kaltura.containers.*" xmlns:mx="http://www.adobe.com/2006/mxml" width="400" 
				 styleName="TitleWindowType2" creationComplete="creationCompleteHandler(event)"
				 title="{resourceManager.getString('account','conversionFlavorSettingsTitle')}" 
				 showCloseButton="true" close="{onClose()}">
	<mx:Script>
		<![CDATA[
			import com.kaltura.kmc.business.PermissionManager;
			import com.kaltura.kmc.modules.account.vo.FlavorVO;
			import com.kaltura.types.KalturaAssetParamsOrigin;
			import com.kaltura.types.KalturaFlavorReadyBehaviorType;
			import com.kaltura.vo.KalturaConversionProfileAssetParams;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.resources.ResourceManager;


			private const LABEL_WIDTH:int = 160;
			private const ELEMENT_WIDTH:int = 160;
			
			
			/**
			 * data provider for the asset's ready behaviour
			 * */
			private const _availabilityOptions:Array = [
				{value:KalturaFlavorReadyBehaviorType.REQUIRED, name:ResourceManager.getInstance().getString('account', 'flavor_required')}, 
				{value:KalturaFlavorReadyBehaviorType.OPTIONAL, name:ResourceManager.getInstance().getString('account', 'flavor_optional')}];
			
			/**
			 * data provider for the asset's origin
			 * */
			private const _originOptions:Array = [
				{value:KalturaAssetParamsOrigin.INGEST, name:ResourceManager.getInstance().getString('account', 'flavor_ingest')},
				{value:KalturaAssetParamsOrigin.CONVERT_WHEN_MISSING, name:ResourceManager.getInstance().getString('account', 'flavor_cwm')},
				{value:KalturaAssetParamsOrigin.CONVERT, name:ResourceManager.getInstance().getString('account', 'flavor_convert')}];
			
			private var _cpap:KalturaConversionProfileAssetParams;
			

			[Bindable]
			public var profileName:String;

			/**
			 * flavor data
			 * */
			private var _flavorVO:FlavorVO;


			/**
			 * remove the popup
			 * */
			private function onClose():void {
				PopUpManager.removePopUp(this);
			}

			/**
			 * edit cpap and mark it as dirty
			 * */
			private function save():void {
				_cpap.readyBehavior = cbAvailability.selectedItem.value;
				_cpap.origin = cbConvertPolicy.selectedItem.value;
				_cpap.systemName = tiSystemName.text;
				// when saving the profile, we look for the "dirty" attribute on the cpaps
				_cpap.dirty = true;
				onClose();
			}

			
			/**
			 * show the values from the cpap in the window
			 * */
			protected function setValues():void {
				if (cbAvailability && cbConvertPolicy && tiSystemName) {
					if (!_cpap.readyBehavior || _cpap.readyBehavior == int.MIN_VALUE) {
						_cpap.readyBehavior = KalturaFlavorReadyBehaviorType.REQUIRED;
					}
					// source flavor - always ingest
					if (_flavorVO.kFlavor.tags.indexOf("source") > -1) {
						_cpap.origin = KalturaAssetParamsOrigin.INGEST;
						cbConvertPolicy.enabled = false;
					}
					else if (!_cpap.origin || _cpap.origin == int.MIN_VALUE) {
						_cpap.origin = KalturaAssetParamsOrigin.CONVERT;
					}
					cbAvailability.selectedIndex = getItemIndex(_availabilityOptions, _cpap.readyBehavior);
					cbConvertPolicy.selectedIndex = getItemIndex(_originOptions, _cpap.origin);
					tiSystemName.text = _cpap.systemName;
				}
			}
			
			
			/**
			 * @param ar	list of stuff
			 * @param value	the value we are looking for
			 * @return the index of the item whose "value" property equals <code>value</code>
			 * */
			protected function getItemIndex(ar:Array, value:*):int {
				for (var i:int = 0; i<ar.length; i++) {
					if (ar[i].value == value) {
						return i;
					}
				}
				return -1;
			}
			
			
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				if (_cpap) {
					setValues();
				}
				PermissionManager.getInstance().applyAllAttributes(this, "conversionFlavorDrilldown");
			}

			/**
			 * flavor data
			 * */
			public function get flavorVO():FlavorVO {
				return _flavorVO;
			}


			[Bindable]
			/**
			 * @private
			 * */
			public function set flavorVO(value:FlavorVO):void {
				_flavorVO = value;
			}

			/**
			 * the KalturaConversionProfileAssetParams being edited
			 */
			public function get cpap():KalturaConversionProfileAssetParams {
				return _cpap;
			}

			/**
			 * @private
			 */
			public function set cpap(value:KalturaConversionProfileAssetParams):void {
				_cpap = value;
				setValues();
			}



		]]>
	</mx:Script>
	<mx:HBox>
		<mx:Label text="{resourceManager.getString('account','convProfileName')}" width="{LABEL_WIDTH}"/>
		<mx:Label text="{profileName}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="{resourceManager.getString('account','convFlavorName')}" width="{LABEL_WIDTH}"/>
		<mx:Label text="{flavorVO.kFlavor.name}"/>
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="{resourceManager.getString('account','assetAvialability')}" width="{LABEL_WIDTH}"/>
		<mx:ComboBox id="cbAvailability" dataProvider="{_availabilityOptions}" 
					 labelField="name" width="{ELEMENT_WIDTH}" />
	</mx:HBox>
	<mx:HBox>
		<mx:Label text="{resourceManager.getString('account','convertToFlavor')}" width="{LABEL_WIDTH}"/>
		<mx:ComboBox id="cbConvertPolicy" dataProvider="{_originOptions}" 
					 labelField="name" width="{ELEMENT_WIDTH}" />
	</mx:HBox>
	<mx:HBox>
		<mx:Text htmlText="{resourceManager.getString('account','systemName')}" width="{LABEL_WIDTH}"/>
		<mx:TextInput id="tiSystemName" width="{ELEMENT_WIDTH}" />
	</mx:HBox>
	<mx:ControlBar width="100%" horizontalAlign="center">
		<mx:Button id="submitBtn" label="{resourceManager.getString('account','saveFlavor')}" useHandCursor="true"
				   buttonMode="true" click="save()"/>
	</mx:ControlBar>
</HelpTitleWindow>
