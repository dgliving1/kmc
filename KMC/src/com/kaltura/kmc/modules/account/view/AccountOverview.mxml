<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 implements="com.kaltura.kmc.modules.account.view.interfaces.IUndoable"
		 xmlns:validators="com.kaltura.validators.*">
	<mx:Script>
		<![CDATA[
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.analytics.KAnalyticsTracker;
			import com.kaltura.analytics.KAnalyticsTrackerConsts;
			import com.kaltura.kmc.business.PermissionManager;
			import com.kaltura.kmc.events.KmcHelpEvent;
			import com.kaltura.kmc.modules.account.events.PartnerEvent;
			import com.kaltura.kmc.modules.account.events.UserEvent;
			import com.kaltura.kmc.modules.account.vo.AdminVO;
			import com.kaltura.kmc.modules.account.vo.PartnerVO;
			import com.kaltura.types.KalturaStatsKmcEventType;
			import com.kaltura.vo.KalturaUser;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.ComboBox;
			import mx.controls.List;
			import mx.controls.RadioButton;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.events.ValidationResultEvent;

			private const LBL_WIDTH:Number = 150;
			private const MAX_WIDTH:Number = 300;
			private const TXT_WIDTH:Number = 190;

			[Bindable]
			public var partnerData:PartnerVO;

			[Bindable]
			public var adminData:AdminVO;


			[ArrayElementType("com.kaltura.vo.KalturaUser")]
			/**
			 * @copy #users
			 * */
			private var _users:ArrayCollection;


			/**
			 * original partner data so we can revert
			 * */
			private var _clonedPartnerData:PartnerVO;

			/**
			 * original admin data so we can revert
			 * */
			private var _clonedAdminData:AdminVO;


			[Bindable]
			private var _ctList:Array = [];
			[Bindable]
			private var _ctComboBox:Array = [];
			
			private var isReady:Boolean = false;

			public static const NAME:String = "overview";


			public function init(event:FlexEvent = null):void {
				if (isReady) {
					reloadData();
				}
				else{
					//populate the content type list
					var s:String = resourceManager.getString('account', 'contentList');
					_ctList = s.split(',');
					_ctComboBox = (resourceManager.getString('account', 'describeList')).split(',');
	
					_clonedAdminData = adminData.clone(); //admin has the email when the application init (in flashvars) so it can be set here
	
					BindingUtils.bindSetter(onPartnerDataLoaded, this, "partnerData");
					BindingUtils.bindSetter(onAdminDataLoaded, this, "adminData");
	
					// load partner data
					var partnerEvent:PartnerEvent = new PartnerEvent(PartnerEvent.GET_PARTNER_INFO);
					partnerEvent.dispatch();
					
					// load changeable data
					reloadData();

					// set ui according to permissions
					PermissionManager.getInstance().applyAllAttributes(this, NAME);
					
					isReady = true;
				}

			}
			
			/**
			 * reload data that may be changed in other modules
			 * */
			private function reloadData():void {
				var ul:UserEvent = new UserEvent(UserEvent.LIST_USERS);
				ul.dispatch();
			}


			private function onPartnerDataLoaded(pvo:PartnerVO):void {
				if (pvo) {
					_clonedPartnerData = pvo.clone();
					setContentCategories();
					setDescribeYourself();
				}
			}


			private function onAdminDataLoaded(avo:AdminVO):void {
				if (avo)
					_clonedAdminData = avo.clone();
			}


			private function setContentCategories():void {
				var arr:Array = partnerData.contentCategories.split(",");
				if ((arr.length > 0) && (arr[0] != '')) {
					cctList.selectedItems = arr;
				}
			}


			private function setDescribeYourself():void {
				for (var i:int = 0; i < dyCB.dataProvider.length; i++) {
					if (partnerData.describeYourself == dyCB.dataProvider[i])
						dyCB.selectedIndex = i;
				}
			}


			private function help():void {
				dispatchEvent(new KmcHelpEvent(KmcHelpEvent.HELP, 'section21'));
			}


			//public functions
			//------------------------------------------------
			public function undo():void {
				adminData = _clonedAdminData.clone();
				partnerData = _clonedPartnerData.clone();
				pOwner.selectedIndex = getAccountOwner();
			}


			public function isChanged():Boolean {
				return (!partnerData.equals(_clonedPartnerData) || !adminData.equals(_clonedAdminData)) ? true : false;
			}


			public function savePartnerInfo(force:Boolean):void {
				KAnalyticsTracker.getInstance().sendEvent(KAnalyticsTrackerConsts.ACCOUNT, KalturaStatsKmcEventType.ACCOUNT_CHANGE_PARTNER_INFO, "Account>Change Partner Info");
				GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.ACCOUNT_CHANGE_PARTNER_INFO, GoogleAnalyticsConsts.ACCOUNT);

				if (!partnerData.equals(_clonedPartnerData) || force) {
//					emailValidator.source = pEmail;
//					if ((emailValidator.validate() as ValidationResultEvent).type == ValidationResultEvent.INVALID)
//						return;
					nameValidator.source = pName;
					if ((nameValidator.validate() as ValidationResultEvent).type == ValidationResultEvent.INVALID)
						return;
					urlValidator.source = pWebsite;
					if ((urlValidator.validate() as ValidationResultEvent).type == ValidationResultEvent.INVALID)
						return;

					if (cctList.selectedItems.length < 0) {
						Alert.show(resourceManager.getString('account', 'enterContentCategory'));
					}

					_clonedPartnerData = partnerData.clone();
					//do save
					var partnerEvent:PartnerEvent = new PartnerEvent(PartnerEvent.UPDATE_PARTNER);
					partnerEvent.dispatch();

					KAnalyticsTracker.getInstance().sendEvent(KAnalyticsTrackerConsts.ACCOUNT, KalturaStatsKmcEventType.ACCOUNT_CHANGE_PARTNER_INFO, "AccountSettings>PartnerInfo>SaveChangesBtn");
					GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.ACCOUNT_CHANGE_PARTNER_INFO, GoogleAnalyticsConsts.ACCOUNT);
				}
			}



			public function saveChanges():void {
				savePartnerInfo(false);
			}


			public function resetClonedData():void {
				_clonedPartnerData = partnerData.clone();
				_clonedAdminData = adminData.clone();
			}


			/**
			 * partner vo has accountOwnerId, use it to select the kalturauser that is
			 * the account owner.
			 * @return id of the account owner in the users (pOwner) data provider array
			 * */
			private function getAccountOwner():int {
				var uid:String = partnerData.accountOwnerId;
				var result:int = -1;
				for (var i:int = 0; i < _users.length; i++) {
					if ((_users[i] as KalturaUser).id == uid) {
						result = i;
						break;
					}
				}
				return result;
			}


			/**
			 * change the account owner on the partner vo
			 * */
			protected function changeAccountOwner(event:ListEvent):void {
				partnerData.accountOwnerId = (event.target.selectedItem as KalturaUser).id;
			}


			[Bindable]
			/**
			 * admin users for the current partner
			 * */
			public function get users():ArrayCollection
			{
				return _users;
			}

			/**
			 * @private
			 * */
			public function set users(value:ArrayCollection):void
			{
				_users = value;
				pOwner.dataProvider = value;
				pOwner.selectedIndex = getAccountOwner();
			}

		]]>
	</mx:Script>
	<!--<mx:EmailValidator id="emailValidator" required="true" property="text"/>-->
	<mx:StringValidator id="passwordValidator" required="true" property="text" minLength="4" maxLength="20"/>
	<mx:StringValidator id="nameValidator" required="true" property="text" minLength="4" maxLength="20"/>

	<validators:URLValidator id="urlValidator" required="true" property="text"/>

	<mx:VBox id="infoBox" width="100%" height="100%" styleName="blueBox" disabledOverlayAlpha="0" horizontalAlign="left"
			 verticalAlign="top">
		<mx:HBox width="100%">
			<mx:Label styleName="pageTitle" text="{resourceManager.getString('account', 'partnerInfo')}"/>
			<mx:Spacer width="100%"/>
			<mx:Button styleName="help" buttonMode="true" click="{help()}"/>
		</mx:HBox>
		<mx:Text id="partnerInfoText" width="{MAX_WIDTH}" height="40"
				 text="{resourceManager.getString('account', 'partnerInfoText')}"/>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'company_name')}*"/>
			<mx:TextInput id="pName" width="{TXT_WIDTH}" text="{partnerData.name}"
						  change="{partnerData.name = pName.text}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'owner_name')}*"/>
			<mx:ComboBox id="pOwner" width="{TXT_WIDTH}"
						 change="changeAccountOwner(event)" labelField="fullName"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'email')}"/>
			<mx:Label id="pEmail" width="{TXT_WIDTH}" text="{(pOwner.selectedItem as KalturaUser).email}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'phone')}*"/>
			<mx:TextInput id="pPhone" width="{TXT_WIDTH}" text="{partnerData.phone}"
						  change="{partnerData.phone = pPhone.text}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'website')}*"/>
			<mx:TextInput id="pWebsite" width="{TXT_WIDTH}" text="{partnerData.url1}"
						  change="{partnerData.url1 = pWebsite.text}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'description')}"/>
			<mx:TextArea id="desc" width="{TXT_WIDTH}" text="{partnerData.description}"
						 change="{partnerData.description = desc.text}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'contetntCategories')}*"/>
			<mx:List id="cctList" width="{TXT_WIDTH}" height="100" dataProvider="{_ctList}"
					 allowMultipleSelection="true"
					 change="{ partnerData.contentCategories = cctList.selectedItems.toString(); }"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label width="{LBL_WIDTH}" text="{resourceManager.getString('account', 'describeYourself')}"/>
			<mx:ComboBox id="dyCB" width="{TXT_WIDTH}" dataProvider="{_ctComboBox}"
						 change="{partnerData.describeYourself = dyCB.selectedItem.toString()}"/>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="{resourceManager.getString('account', 'adultContent')}"/>
			<mx:RadioButton id="adContYes" label="{resourceManager.getString('account', 'yes')}" groupName="adCont"
							selected="{partnerData.adultContent}"
							change="{if(adContYes.selected)partnerData.adultContent = true}"/>
			<mx:RadioButton id="adContNo" label="{resourceManager.getString('account', 'no')}" groupName="adCont"
							selected="{!partnerData.adultContent}"
							change="{if(adContNo.selected)partnerData.adultContent = false}"/>
		</mx:HBox>
		<mx:Label text="{resourceManager.getString('account', 'reqF')}" fontSize="9"/>
		<mx:Button id="saveChangesBtn" label="{resourceManager.getString('account', 'saveChanges')}"
				   click="savePartnerInfo( true )" buttonMode="true"/>
	</mx:VBox>
</mx:HBox>
