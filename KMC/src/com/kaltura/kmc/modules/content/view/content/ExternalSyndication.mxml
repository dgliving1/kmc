<?xml version="1.0" encoding="utf-8"?>
<!---
	 "Syndicate" part of the content view stack.
	 lists all syndications and presents a gateway to adding
	 syndications and editing them.
-->
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:es="com.kaltura.kmc.modules.content.view.window.externalsyndication.*"
		 xmlns:controls="com.kaltura.controls.*" implements="com.kaltura.kmc.modules.content.view.content.IContentPanel"
		 width="100%" height="100%" creationComplete="applyPermissions(event)">

	<mx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEvent;
			import com.kaltura.analytics.GoogleAnalyticsConsts;
			import com.kaltura.analytics.GoogleAnalyticsTracker;
			import com.kaltura.analytics.KAnalyticsTracker;
			import com.kaltura.analytics.KAnalyticsTrackerConsts;
			import com.kaltura.kmc.business.PermissionManager;
			import com.kaltura.kmc.events.KmcHelpEvent;
			import com.kaltura.kmc.modules.content.events.ConversionSettingsEvent;
			import com.kaltura.kmc.modules.content.events.ExternalSyndicationEvent;
			import com.kaltura.kmc.modules.content.events.PartnerEvent;
			import com.kaltura.kmc.modules.content.events.SearchEvent;
			import com.kaltura.kmc.modules.content.events.SetSyndicationPagerEvent;
			import com.kaltura.kmc.modules.content.model.ExtSynModel;
			import com.kaltura.kmc.modules.content.view.window.externalsyndication.popupwindows.ExternalSyndicationPopUpWindow;
			import com.kaltura.kmc.modules.content.vo.ExternalSyndicationVO;
			import com.kaltura.types.KalturaStatsKmcEventType;
			import com.kaltura.vo.KalturaBaseEntryFilter;
			
			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			[Bindable]
			public var allSelected:Boolean = false;


			[Bindable]
			/**
			 * the piece of the model required by this component
			 * */
			public var extSynModel:ExtSynModel;

			/**
			 * optional flavor params
			 * */
			public var flavorParams:ArrayCollection;

			/**
			 * application base url
			 * */
			public var rootUrl:String;

			/**
			 * a flag used to only bind properties once
			 * */
			private var watchersCreated:Boolean;

			/**
			 * set all syndications data
			 * @param externalSyndicationData new syndication data
			 * */
			private function setExternalSyndicationData(externalSyndicationData:ArrayCollection):void {
				loadSyndicationData(externalSyndicationData);
				updateBtnStatus();
			}


			/**
			 * this panel does not support initial filtering data, the kmef param is ignored.
			 * @inheritDoc
			 * */
			public function init(kmef:KalturaBaseEntryFilter = null):void {
				if (!watchersCreated) {
					// only bind once
					BindingUtils.bindSetter(setExternalSyndicationData, extSynModel, "externalSyndicationData");
					BindingUtils.bindSetter(onPlaylistReady, extSynModel, "generalPlayListdata");
					watchersCreated = true;
				}
				// load playlists
				var listPlayList:SearchEvent = new SearchEvent(SearchEvent.SEARCH_PLAYLIST, null);
				listPlayList.dispatch();
				// external syndications are listed after the call for playlists returns
				// list flavor params
				var getFlavorParams:ConversionSettingsEvent = new ConversionSettingsEvent(ConversionSettingsEvent.LIST_FLAVOR_PARAMS);
				getFlavorParams.dispatch();
				// get partner info
				var getPartnerInfoEvent:PartnerEvent = new PartnerEvent(PartnerEvent.GET_PARTNER_INFO);
				getPartnerInfoEvent.dispatch();
			}


			private function onPlaylistReady(generalPlayListdata:ArrayCollection):void {
				if (generalPlayListdata)
					loadFeeds();
			}

			/**
			 * list external syndications
			 * */
			private function loadFeeds():void {
				if (paging.pageSize == 10) {
					tableContainer.height = (feedsTable.rowHeight * 10) + feedsTable.headerHeight + paging.height + deleteExSynBtn.height + 20;
					feedsTable.percentHeight = 100; //tableContainer.height - (paging.height + deleteExSynBtn.height);//entryTable.rowHeight*11+entryTable.headerHeight;
					feedsTable.rowCount = 10;
					actionsBox.height = tableContainer.height;
				}
				else {
					tableContainer.percentHeight = 100;
					feedsTable.percentHeight = 100;
					feedsTable.rowCount = -1;
					actionsBox.percentHeight = 100;
				}
				
				// Added as a patch. The filter isuue needs some more research and refactoring. -Biton.
				extSynModel.syndicationFeedsFilterPager.pageSize = paging.pageSize;
				
				var listExSynEvent:ExternalSyndicationEvent = new ExternalSyndicationEvent(ExternalSyndicationEvent.LIST_EXTERNAL_SYNDICATIONS);
				listExSynEvent.data = paging.kalturaFilterPager;
				listExSynEvent.dispatch();
			}


			private function loadSyndicationData(externalSyndicationData:ArrayCollection):void {
				for each (var extSynd:ExternalSyndicationVO in externalSyndicationData) {
					extSynd.addEventListener(ExternalSyndicationVO.SELECTED_CHANGED_EVENT, updateBtnStatus);
				}
			}


			private function updateBtnStatus(event:Event = null):void {
				var numSelected:int = 0;
				for each (var extSynd:ExternalSyndicationVO in extSynModel.externalSyndicationData) {
					numSelected += extSynd.selected ? 1 : 0;
				}

				allSelected = (extSynModel.externalSyndicationData.length == numSelected);
			}


			private function showNewVideoFeedWindow(event:Event):void {
				var extFeedPopUp:ExternalSyndicationPopUpWindow = new ExternalSyndicationPopUpWindow();
				extFeedPopUp.flavorParams = flavorParams;
				extFeedPopUp.extSynModel = extSynModel;
				extFeedPopUp.rootUrl = rootUrl;
				extFeedPopUp.addEventListener(KmcHelpEvent.HELP, dispatchHelp);

				PopUpManager.addPopUp(extFeedPopUp, Application.application as DisplayObject, true);
				PopUpManager.centerPopUp(extFeedPopUp);
			}

			/**
			 * pass the event to whomever is listening 
			 * (because events from popups don't naturally propagate to the main app, not the same displaylist)
			 * */
			private function dispatchHelp(e:KmcHelpEvent):void {
				dispatchEvent(e.clone());
			}

			private function onDelete(event:Event):void {
				var selectedFeeds:Array = feedsTable.selectedItems;
				if (selectedFeeds.length == 0) {
					Alert.show(resourceManager.getString('cms', 'noFeedSelected'));
					return;
				}

				var delStr:String = "";
				for each (var feed:ExternalSyndicationVO in selectedFeeds) {
					delStr += '\n' + feed.kSyndicationFeed.name;
				}

				var msg:String = "Are you sure you want to delete the following feeds:" + delStr + "\n?";
				var title:String = "Delete ?";

				Alert.show(msg, title, Alert.YES | Alert.NO, null, responeFnc);
			}


			private function responeFnc(evt:CloseEvent):void {
				if (evt.detail == Alert.YES) {
					var selectedFeeds:Array = feedsTable.selectedItems;
					var ids:Array = new Array();
					for each (var feed:ExternalSyndicationVO in selectedFeeds) {
						ids.push(feed.kSyndicationFeed.id);
					}

					var deletetFeedsEvent:ExternalSyndicationEvent = new ExternalSyndicationEvent(ExternalSyndicationEvent.DELETE_EXTERNAL_SYNDICATION);
					deletetFeedsEvent.data = ids;
					deletetFeedsEvent.dispatch();
				}
			}


			private function gotoPage():void {
				loadFeeds();
				GoogleAnalyticsTracker.getInstance().sendToGA(GoogleAnalyticsConsts.CONTENT_GO_TO_PAGE, GoogleAnalyticsConsts.CONTENT);
				KAnalyticsTracker.getInstance().sendEvent(KAnalyticsTrackerConsts.CONTENT, KalturaStatsKmcEventType.CONTENT_CONTENT_GO_TO_PAGE, "content>Show Rows");
			}


			private function onPagerCreationComplete(event:Event):void {
				var e:CairngormEvent = new SetSyndicationPagerEvent(SetSyndicationPagerEvent.SET_PAGER, paging.kalturaFilterPager);
				e.dispatch();
				paging.kalturaFilterPager.pageIndex = 0;
				paging.kalturaFilterPager.pageSize = paging.rowInPageCb.value as int;
				
				// Added as a patch. The filter isuue needs some more research and refactoring. -Biton.
				extSynModel.syndicationFeedsFilterPager.pageIndex = 0;
				extSynModel.syndicationFeedsFilterPager.pageSize = paging.rowInPageCb.value as int;
			}


			protected function applyPermissions(event:FlexEvent):void {
				PermissionManager.getInstance().applyAllAttributes(this, this.id);
			}
		]]>
	</mx:Script>
	<mx:Text styleName="expendableButton" text="{resourceManager.getString('cms', 'syndicationFeeds')}"/>
	<mx:VBox width="100%" styleName="featureDescriptionTitleBox">
		<mx:Text text="{resourceManager.getString('cms', 'externalSyndicationIntroText')}"
			 width="100%" id="accessControlIntroText" styleName="pageDescription"/>
	</mx:VBox>

	<mx:HBox width="100%" height="100%">
		<mx:VBox id='tableContainer' width="100%" horizontalAlign="center" styleName="entriesTablePagerAndButtonsVbox">
			<es:ExternalSyndicationTable id='feedsTable' allSelected="{allSelected}"
										 dataProvider="{extSynModel.externalSyndicationData}"/>
			<controls:Paging id="paging" width="100%" styleName="paging" rowsInPageChange="gotoPage()" 
							 kalturaFilterPager="{extSynModel.syndicationFeedsFilterPager}"
							 totalCount="{extSynModel.externalSyndicationFeedsTotalCount}" nextPage="gotoPage()"
							 prvPage="gotoPage()" getPageNum="gotoPage()" visible="true" showRowsInPage="true"
							 creationComplete="{onPagerCreationComplete(event)}" rowsInPage="{[10, 25, 50, 100]}"/>
			<mx:HBox width="100%" styleName="DataGridActions" horizontalScrollPolicy="off" verticalScrollPolicy="off">
				<mx:Button id='deleteExSynBtn'
						   label="{resourceManager.getString('cms', 'deleteExternalSyndicationButton')}"
						   useHandCursor="true" buttonMode="true" click="onDelete(event)"
						   toolTip="{resourceManager.getString('cms', 'deleteExternalSyndicationButtonToolTip')}"/>
			</mx:HBox>

		</mx:VBox>
		<mx:VBox id='actionsBox' height="100%" styleName="listActionsBox">
			<mx:Button id="addBtn" label="{resourceManager.getString('cms', 'addExternalSyndicationButton')}"
					   useHandCursor="true" buttonMode="true" click="showNewVideoFeedWindow(event)"
					   styleName="listActionButton"/>
		</mx:VBox>
	</mx:HBox>

</mx:VBox>
