<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%"
		 implements="com.kaltura.kmc.modules.content.view.filter.IFilterTab">
	<mx:Metadata>
		[Event(name="filterChanged", type="flash.events.Event")] 
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.kaltura.types.KalturaEntryStatus;
			import com.kaltura.vo.KalturaBaseEntryFilter;
			import com.kaltura.vo.KalturaMediaEntryFilter;
			
			
			public function setFilter(filterVo:KalturaMediaEntryFilter):void {
				if (!filterVo.statusIn) {
					allConversionStatusBtn.selected = true;
					convConvertingBtn.selected = false;
					convErrorBtn.selected = false;
					convReadyBtn.selected = false;
					noMediaBtn.selected = false;
					pendingBtn.selected = false;
					convUploadingBtn.selected = false;
				}
				else {
					allConversionStatusBtn.selected = false;
					var convStatusArr:Array = filterVo.statusIn.split(',');
					for each (var convCode:String in convStatusArr) {
						switch (convCode) {
							case KalturaEntryStatus.ERROR_CONVERTING:
							case KalturaEntryStatus.ERROR_IMPORTING:
								convErrorBtn.selected = true;
								break;
							
							case KalturaEntryStatus.IMPORT:
								convUploadingBtn.selected = true;
								break;
							
							case KalturaEntryStatus.PRECONVERT:
								convConvertingBtn.selected = true;
								break;
							
							case KalturaEntryStatus.READY:
								convReadyBtn.selected = true;
								break;
							
							case KalturaEntryStatus.NO_CONTENT:
								noMediaBtn.selected = true;
								break;
							
							case KalturaEntryStatus.PENDING:
								pendingBtn.selected = true;
								break;
							
						}
					}
				}
			}
			
			/**
			 * filter by conversion status
			 * */
			public function getFilterString():String {
				var convStatusArray:Array = [];
				
				if (allConversionStatusBtn.selected) {
					convStatusArray.push(KalturaEntryStatus.ERROR_CONVERTING, KalturaEntryStatus.ERROR_IMPORTING);
					convStatusArray.push(KalturaEntryStatus.IMPORT);
					convStatusArray.push(KalturaEntryStatus.PRECONVERT);
					convStatusArray.push(KalturaEntryStatus.READY);
					convStatusArray.push(KalturaEntryStatus.NO_CONTENT);
					convStatusArray.push(KalturaEntryStatus.PENDING);
				}
				else {
					if (convErrorBtn.selected) { // for error
						convStatusArray.push(KalturaEntryStatus.ERROR_CONVERTING, KalturaEntryStatus.ERROR_IMPORTING);
					}
					if (convUploadingBtn.selected) { // for uploading 
						convStatusArray.push(KalturaEntryStatus.IMPORT);
					}
					if (convConvertingBtn.selected) { // for converting
						convStatusArray.push(KalturaEntryStatus.PRECONVERT);
					}
					if (convReadyBtn.selected) { // for ready 
						convStatusArray.push(KalturaEntryStatus.READY);
					}
					if (noMediaBtn.selected) { // for no media 
						convStatusArray.push(KalturaEntryStatus.NO_CONTENT);
					}
					if (pendingBtn.selected) { // for pending
						convStatusArray.push(KalturaEntryStatus.PENDING);
					}
				}
				return convStatusArray.join(',');
			}
			
			/**
			 * user select to choose all conversion status
			 */
			private function onAllConversionStatusClicked(evt:Event):void {
				var isSelected:Boolean = evt.target.selected;
				if (!isSelected) {
					(evt.target as Button).selected = true;
					convConvertingBtn.selected = false;
					convErrorBtn.selected = false;
					convReadyBtn.selected = false;
					noMediaBtn.selected = false;
					pendingBtn.selected = false;
					convUploadingBtn.selected = false;
					dispatchEvent(new Event(BaseFilter.FILTER_CHANGED));
				}
			}
			
			
			/**
			 * one of the conversion status buttons was clicked
			 */
			private function changeConversionStatusFilter(evt:Event):void {
				//if a moderation button was selected deselect the all moderation status 
				if ((evt.target as Button).selected) {
					allConversionStatusBtn.selected = false;
				}
				//if non is selected - highlight the 'allModeration' button
				if (validateConversionStatus()) {
					allConversionStatusBtn.selected = true;
				}
				dispatchEvent(new Event(BaseFilter.FILTER_CHANGED));
			}
			
			
			/**
			 * check if all conversion status buttons are selected - if non is selected return true
			 * if one of them is selected - return false
			 */
			private function validateConversionStatus():Boolean {
				return !convConvertingBtn.selected && !pendingBtn.selected && !noMediaBtn.selected && !convErrorBtn.selected && !convReadyBtn.selected && !convUploadingBtn.selected;
			}
			

			
			
			public function get buttons():Array {
				return [allConversionStatusBtn, convReadyBtn, noMediaBtn, pendingBtn, convUploadingBtn, convConvertingBtn, convErrorBtn];
			}
		]]>
	</mx:Script>
	<mx:Button id="allConversionStatusBtn" width="100%" selected="true"
			   label="{resourceManager.getString('cms', 'allConversionStatus')}" buttonMode="true"
			   click="{onAllConversionStatusClicked(event)}" styleName="mainFilterGroupButton"/>
	<mx:Button id="convReadyBtn" width="100%" selected="false" label="{resourceManager.getString('cms', 'readyBtn')}"
			   buttonMode="true" toggle="true" styleName="innerFilterGroupButton"
			   click="{changeConversionStatusFilter(event)}"/>
	<mx:Button id="noMediaBtn" width="100%" selected="false" label="{resourceManager.getString('cms', 'noMediaBtn')}"
			   buttonMode="true" toggle="true" styleName="innerFilterGroupButton"
			   click="{changeConversionStatusFilter(event)}"/>
	<mx:Button id="pendingBtn" width="100%" selected="false" label="{resourceManager.getString('cms', 'pendingBtn')}"
			   buttonMode="true" toggle="true" styleName="innerFilterGroupButton"
			   click="{changeConversionStatusFilter(event)}"/>
	<mx:Button id="convUploadingBtn" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'uploadingBtn')}" buttonMode="true" toggle="true"
			   styleName="innerFilterGroupButton" click="{changeConversionStatusFilter(event)}"/>
	<mx:Button id="convConvertingBtn" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'convertingBtn')}" buttonMode="true" toggle="true"
			   styleName="innerFilterGroupButton" click="{changeConversionStatusFilter(event)}"/>
	<mx:Button id="convErrorBtn" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'convertErrorBtn')}" buttonMode="true" toggle="true"
			   styleName="innerFilterGroupButton" click="{changeConversionStatusFilter(event)}"/>
</mx:VBox>
