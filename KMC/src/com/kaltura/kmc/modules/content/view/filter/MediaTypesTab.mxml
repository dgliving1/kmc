<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%"
		 implements="com.kaltura.kmc.modules.content.view.filter.IFilterTab">
	<mx:Metadata>
		[Event(name="filterChanged", type="flash.events.Event")] 
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import com.kaltura.types.KalturaMediaType;
			import com.kaltura.vo.KalturaMediaEntryFilter;
			
			import mx.resources.ResourceManager;
			
			[Bindable]
			public var enablelivestream:Boolean
			
			/**
			 * check if one of the types is selected. if not - select the 'all types' button
			 * if one of the types is selected - start a new search
			 */
			private function validateTypesAndSend(evt:Event = null):void {
				// if the click is a select click - deselect the alltypes button
				if ((evt.target as Button).selected) {
					selectAllTypesBtn.selected = false;
				}
				if (validateTypes()) {
					selectAllTypesBtn.selected = true;
				}
				dispatchEvent(new Event(Filter.FILTER_CHANGED));
			}
			
			
			/**
			 * check if all types are selected - if non is selected return true
			 * if one of them is selected - return false
			 */
			private function validateTypes():Boolean {
				var result:Boolean = false;
				if (!mixType.selected && !videoType.selected && !imageType.selected && !audioType.selected && !streamType.selected) {
					result = true;
				}
				return result;
			}
			
			
			/**
			 * filter by media types
			 * */
			public function getFilterString():String {
				var mediaTypeString:String = '';
				if (videoType.selected)
					mediaTypeString += KalturaMediaType.VIDEO + ",";
				if (imageType.selected)
					mediaTypeString += KalturaMediaType.IMAGE + ",";
				if (audioType.selected)
					mediaTypeString += KalturaMediaType.AUDIO + ",";
				if (streamType.selected)
					mediaTypeString += KalturaMediaType.LIVE_STREAM_FLASH + ",";
				if (mixType.selected) {
					// mix is not in the enum, so it's hardcoded
					mediaTypeString += "6,";
				}
				//remove the last ,				 
				mediaTypeString = mediaTypeString.slice(0, mediaTypeString.length - 1);
				//if the select all media types is selected - add all media types
				if (selectAllTypesBtn.selected) {
					mediaTypeString = KalturaMediaType.VIDEO + "," + KalturaMediaType.IMAGE + "," + KalturaMediaType.AUDIO + "," + "6" + "," + KalturaMediaType.LIVE_STREAM_FLASH;
				}
				return mediaTypeString;
			}
			
			
			
			/**
			 * Creates an object with keys as media types,
			 * later used for easy access while parsing this data.
			 * The optional keys are enumerated in <code>KalturaMediaType</code>
			 * @param mediaTypes	the string that represents media
			 * 						types on a filter
			 * @return an object like {1:true, 201:true, ..}
			 * */
			protected function mediaTypesToObject(mediaTypes:String):Object {
				var result:Object = {};
				var mediaTypesArray:Array = mediaTypes.split(",");
				for (var i:int = 0; i < mediaTypesArray.length; i++) {
					result[mediaTypesArray[i]] = true;
				}
				return result;
			}
			
			
			/**
			 * select all type of entries
			 */
			private function selectAllTypes(evt:Event):void {
				var isSelected:Boolean = evt.target.selected;
				if (isSelected) {
					mixType.selected = false;
					videoType.selected = false;
					audioType.selected = false;
					imageType.selected = false;
					streamType.selected = false;
				}
				else {
					evt.target.selected = true;
				}
				dispatchEvent(new Event(Filter.FILTER_CHANGED));
			}

			
			
			/**
			 * media types: check if there is an empty filter or if all
			 * types are in, select buttons accordingly.
			 * */
			public function setFilter(filterVo:KalturaMediaEntryFilter):void {
				// filterVo.mediaTypeIn is a list of KalturaMediaType-s separated by ",".
				var mediaTypes:Object = mediaTypesToObject(filterVo.mediaTypeIn);
				if (filterVo.mediaTypeIn == "" || (mediaTypes[KalturaMediaType.VIDEO] && mediaTypes[6] && mediaTypes[KalturaMediaType.AUDIO] && mediaTypes[KalturaMediaType.LIVE_STREAM_FLASH] && mediaTypes[KalturaMediaType.IMAGE])) {
					// all types selected
					selectAllTypesBtn.selected = true;
					mixType.selected = false;
					audioType.selected = false;
					videoType.selected = false;
					imageType.selected = false;
					imageType.selected = false;
					streamType.selected = false;
				}
				else {
					selectAllTypesBtn.selected = false;
					
					if (mediaTypes[KalturaMediaType.VIDEO])
						videoType.selected = true;
					if (mediaTypes[6])
						mixType.selected = true;
					if (mediaTypes[KalturaMediaType.AUDIO])
						audioType.selected = true;
					if (mediaTypes[KalturaMediaType.IMAGE])
						imageType.selected = true;
					if (mediaTypes[KalturaMediaType.LIVE_STREAM_FLASH])
						streamType.selected = true;
				}
			}
			
			public function get buttons():Array {
				return [selectAllTypesBtn, mixType, videoType, imageType, audioType, streamType];
			}
			
		]]>
	</mx:Script>
	<mx:Button id="selectAllTypesBtn" width="100%" selected="true"
			   label="{resourceManager.getString('cms', 'allMediaTypes')}" buttonMode="true" toggle="true"
			   click="{selectAllTypes(event)}" styleName="mainFilterGroupButton"/>
	<mx:Button id="videoType" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'videoSingle')}" buttonMode="true" toggle="true"
			   click="{validateTypesAndSend(event)}" styleName="innerFilterGroupButton"/>
	<mx:Button id="imageType" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'image')}" buttonMode="true" toggle="true"
			   click="{validateTypesAndSend(event)}" styleName="innerFilterGroupButton" />
	<mx:Button id="audioType" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'audio')}" buttonMode="true" toggle="true"
			   click="{validateTypesAndSend(event)}" styleName="innerFilterGroupButton" />
	<mx:Button id="mixType" width="100%" selected="false"
			   label="{resourceManager.getString('cms', 'videoMix')}" buttonMode="true" toggle="true"
			   click="{validateTypesAndSend(event)}" styleName="innerFilterGroupButton" />
	<mx:Button id="streamType" width="100%" selected="false"
			   label="{ResourceManager.getInstance().getString('cms', 'liveStream')}" buttonMode="true"
			   toggle="true" visible="{enablelivestream}" includeInLayout="{enablelivestream}"
			   click="{validateTypesAndSend(event)}" styleName="innerFilterGroupButton" />
</mx:VBox>
