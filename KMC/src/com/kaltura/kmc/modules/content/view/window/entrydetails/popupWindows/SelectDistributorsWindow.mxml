<?xml version="1.0" encoding="utf-8"?>
<!--- This window holds a list of available distributors and their distribution state -->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="550" height="500"
				title="{resourceManager.getString('cms','selectDistributors')}" layout="vertical"
				showCloseButton="true" close="onClose()"
				paddingLeft="15" paddingRight="15"
				styleName="TitleWindowType2"
				backgroundColor="#f7f7f7"
				xmlns:components="com.kaltura.kmc.modules.content.view.window.entrydetails.distributionComponents.*">
	<mx:Script>
		<![CDATA[
			import com.kaltura.kmc.business.PermissionManager;
			import com.kaltura.kmc.modules.content.events.DistributionProfileEvent;
			import com.kaltura.kmc.modules.content.events.EntryDistributionEvent;
			import com.kaltura.kmc.modules.content.model.EntryDistributionWithProfile;
			import com.kaltura.kmc.modules.content.model.ThumbnailWithDimensions;
			import com.kaltura.kmc.modules.content.view.window.entrydetails.distributionComponents.DistributeWhenReadyComponent;
			import com.kaltura.kmc.modules.content.view.window.entrydetails.distributionComponents.DistributorComponent;
			import com.kaltura.kmc.modules.content.vo.FlavorAssetWithParamsVO;
			import com.kaltura.types.KalturaDistributionProfileActionStatus;
			import com.kaltura.types.KalturaEntryDistributionStatus;
			import com.kaltura.vo.KalturaBaseEntry;
			import com.kaltura.vo.KalturaDistributionProfile;
			import com.kaltura.vo.KalturaDistributionThumbDimensions;
			import com.kaltura.vo.KalturaEntryDistribution;
			import com.kaltura.vo.KalturaThumbAsset;
			
			import mx.collections.ArrayCollection;
			import mx.managers.PopUpManager;
			
			public var selectedEntry:KalturaBaseEntry;
			[Bindable]
			private var _distributionDataProvider:Array;
			public var entryFlavors:ArrayCollection;
			public var entryThumbs:Array;
			//permission to add distributions
			public var enableAddDistribution:Boolean = true;
			//permission to distribute
			public var enableDistribution:Boolean = true;
			//permission to remove distributions
			public var enableRemoveDistribution:Boolean = true;
			
			private function onClose():void {
				PopUpManager.removePopUp(this);
			}
			
			
			/**
			 * This function sets the given values and builds the window components according
			 * to its input
			 * */
			public function buildDistributorsWindow(distributionProfiles:Array, entryDistributions:Array):void {
				PermissionManager.getInstance().applyAllAttributes(this, "selectDistributorsWindow");	
				//containes all profiles that entries weren't distributed to them yet
				var unusedDistributionProfiles:ArrayCollection = new ArrayCollection(distributionProfiles.concat());
				var entryDistributions:Array = entryDistributions;
				
				_distributionDataProvider = new Array;
				for each (var distribution:EntryDistributionWithProfile in entryDistributions) {
					_distributionDataProvider.push(distribution);
					unusedDistributionProfiles.removeItemAt(unusedDistributionProfiles.getItemIndex(distribution.kalturaDistributionProfile));					
				}
				
				for each (var profile:KalturaDistributionProfile in unusedDistributionProfiles) {
					var newDistributionWithProfile:EntryDistributionWithProfile = new EntryDistributionWithProfile();
					var newDistribution:KalturaEntryDistribution = new KalturaEntryDistribution();
					newDistribution.entryId = selectedEntry.id;
					newDistribution.distributionProfileId = profile.id;
					newDistributionWithProfile.kalturaEntryDistribution = newDistribution;
					newDistributionWithProfile.kalturaDistributionProfile = profile;
					_distributionDataProvider.push(newDistributionWithProfile);
				}	
			} 
			
			/**
			 * Sends update to the server with all distribution points that were changed
			 * */
			private function apply():void {
				var addDistributors:Array = new Array();
				var removeDistributors:Array = new Array();
				var profilesToUpdate:Array = new Array();
				for (var i:int = 0; i<_distributionDataProvider.length; i++) {
					var entryDistribution:EntryDistributionWithProfile = _distributionDataProvider[i] as EntryDistributionWithProfile;
					var disComponent:DistributorComponent = dataGrid.dataGridListItems()[i][0] as DistributorComponent;
					if (disComponent.initState && !(disComponent.cbSelected)) {
						removeDistributors.push(entryDistribution.kalturaEntryDistribution);
						//reset the init state
						disComponent.initState = disComponent.cbSelected;
					}
					else if (!(disComponent.initState) && disComponent.cbSelected) {
						var qcBox:DistributeWhenReadyComponent = dataGrid.dataGridListItems()[i][1] as DistributeWhenReadyComponent;
						if (qcBox && qcBox.cbVisible && qcBox.cbSelected)
							entryDistribution.manualQualityControl = false;
						
						addDistributors.push(entryDistribution);
						//reset the init state
						disComponent.initState = disComponent.cbSelected;
					}
				}
				
				var updateEntryDistributions:EntryDistributionEvent = new EntryDistributionEvent(EntryDistributionEvent.UPDATE_LIST, addDistributors, removeDistributors);
				updateEntryDistributions.dispatch();
				
				PopUpManager.removePopUp(this);
			}
		
		]]>
	</mx:Script>
	<mx:Label text="{resourceManager.getString('cms','distributors')}" styleName="drillDownTitleLabel"/>
	<mx:Text text="{resourceManager.getString('cms','selectDistributorsText')}" width="100%"/>
	<mx:Spacer height="4"/>
	<components:SelectDistributorsDataGrid id="dataGrid" width="100%" height="100%" dataProvider="{_distributionDataProvider}" draggableColumns="false" 
				 sortableColumns="false" selectable="false" rowHeight="40"/>


	<mx:ControlBar>
		<mx:Button id="applyBtn" label="{resourceManager.getString('cms', 'apply')}" click="apply()"
				   buttonMode="true"/>
	</mx:ControlBar>
</mx:TitleWindow>
